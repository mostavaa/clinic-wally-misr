@model ClinicWallyMisr.medicine

@{
    ViewBag.Title = "Edit";
}

@helper renderPatient(patient obj)
{
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label col-md-6">Patient Name : </label>
                <div class="col-md-10 ">
                    <input type="text" readonly="readonly" value="@obj.name " />

                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label col-md-6">diagnosis</label>
                <div class="col-md-10 ">

                    <input type="text" readonly="readonly" value="@obj.diagnosis " />

                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label col-md-6">diagnosis Code</label>
                <div class="col-md-10 ">

                    <input type="text" readonly="readonly" value="@obj.diagnosisCode " />

                </div>
            </div>

        </div>
    </div>


    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label col-md-6">notes</label>
                <div class="col-md-10 ">

                    <input type="text" readonly="readonly" value="@obj.notes " />

                </div>
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label col-md-6">master Status</label>
                <div class="col-md-10 ">
                    <input type="text" readonly="readonly" value="@obj.masterStatus " />
                </div>
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label col-md-6">date of Diagnosis</label>
                <div class="col-md-10 ">

                    <input type="text" readonly="readonly" value="@obj.dateofDiagnosis " />

                </div>
            </div>

        </div>
    </div>




    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label col-md-6">first Status</label>
                <div class="col-md-10 ">

                    <input type="text" readonly="readonly" value="@obj.firstStatus " />

                </div>
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label col-md-6">date of Relapse</label>
                <div class="col-md-10 ">

                    <input type="text" readonly="readonly" value="@obj.dateofRelapse " />

                </div>
            </div>

        </div>


    </div>
}
<div style="margin-top:20px;clear:both;"></div>
<div class="row">
    <div class="col-md-offset-2 col-md-6">
        <div class="row">
            @Html.ActionLink("Patients", "Index", "patients", null, new { @class = "btn" })
            @Html.ActionLink("Visits", "Index", "visits", new { id = Model.prescription.visit.patient.id }, new { @class = "btn" })
            @Html.ActionLink("Prescriptions", "Index", "prescriptions", new { id = Model.prescription.visit.id }, new { @class = "btn" })
            @Html.ActionLink("Medicines", "Index", "medicines", new { id = Model.prescription.id }, new { @class = "btn" })


        </div>
        @renderPatient(Model.prescription.visit.patient)
    </div>
</div>
<div style="margin-top:20px;clear:both;"></div>
<div class="row">
    <div class="col-md-10 col-md-offset-1">
        <div class="row">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.id)
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.code, htmlAttributes: new { @class = "control-label col-md-8" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "myinput" } })
                                    @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.scientificName, htmlAttributes: new { @class = "control-label col-md-8" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.scientificName, new { htmlAttributes = new { @class = "myinput" } })
                                    @Html.ValidationMessageFor(model => model.scientificName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.commercialName, htmlAttributes: new { @class = "control-label col-md-8" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.commercialName, new { htmlAttributes = new { @class = "myinput" } })
                                    @Html.ValidationMessageFor(model => model.commercialName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.activeIngredient, htmlAttributes: new { @class = "control-label col-md-8" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.activeIngredient, new { htmlAttributes = new { @class = "myinput" } })
                                    @Html.ValidationMessageFor(model => model.activeIngredient, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-8" })
                                <div class="col-md-10">
                                    <select id="type" name="type" class="myinput">
                                       
                                    </select>                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dose, htmlAttributes: new { @class = "control-label col-md-8" })
                                <div class="col-md-10">
                                    <select id="dose" name="dose" class="myinput">
                                     
                                    </select>
                                    @Html.ValidationMessageFor(model => model.dose, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.sideEffects, htmlAttributes: new { @class = "control-label col-md-8" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.sideEffects, new { htmlAttributes = new { @class = "myinput" } })
                                    @Html.ValidationMessageFor(model => model.sideEffects, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label col-md-8" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "myinput" } })
                                    @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.UOM, htmlAttributes: new { @class = "control-label col-md-8" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UOM, new { htmlAttributes = new { @class = "myinput" } })
                                    @Html.ValidationMessageFor(model => model.UOM, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Route, htmlAttributes: new { @class = "control-label col-md-8" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Route, new { htmlAttributes = new { @class = "myinput" } })
                                    @Html.ValidationMessageFor(model => model.Route, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-8" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "myinput" } })
                                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Frequency, htmlAttributes: new { @class = "control-label col-md-8" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Frequency, new { htmlAttributes = new { @class = "myinput" } })
                                    @Html.ValidationMessageFor(model => model.Frequency, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>





                    <input type="hidden" value="@Model.prescriptionId" id="prescriptionId" name="prescriptionId" />

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index", new { id = Model.prescriptionId }, new { @class = "btn btn-default" })
            </div>
            </div>
        </div>
    </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
